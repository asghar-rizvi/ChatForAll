<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChatForAll | Settings</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #6c5ce7;
            --primary-dark: #5649c0;
            --secondary: #00cec9;
            --dark: #1e272e;
            --darker: #1a2026;
            --light: #f5f6fa;
            --gray: #808e9b;
            --success: #00b894;
            --danger: #d63031;
            --warning: #fdcb6e;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--dark);
            color: var(--light);
            min-height: 100vh;
        }

        /* Navigation */
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem 5%;
            background-color: rgba(30, 39, 46, 0.9);
            position: fixed;
            width: 100%;
            z-index: 100;
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(128, 142, 155, 0.1);
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logo h1 {
            font-size: 1.8rem;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            font-weight: 800;
        }

        .logo i {
            font-size: 2rem;
            color: var(--primary);
        }

        .nav-links {
            display: flex;
            gap: 2rem;
        }

        .nav-links a {
            color: var(--light);
            text-decoration: none;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-links a:hover {
            color: var(--secondary);
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            background: var(--secondary);
            bottom: -5px;
            left: 0;
            transition: width 0.3s ease;
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        .auth-buttons {
            display: flex;
            gap: 1rem;
        }

        .btn {
            padding: 0.6rem 1.5rem;
            border-radius: 30px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
            font-size: 0.9rem;
        }

        .btn-primary {
            background-color: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(108, 92, 231, 0.3);
        }

        .btn-outline {
            background-color: transparent;
            color: var(--light);
            border: 2px solid var(--gray);
        }

        .btn-outline:hover {
            border-color: var(--secondary);
            color: var(--secondary);
            transform: translateY(-2px);
        }

        /* Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal {
            background-color: var(--darker);
            border-radius: 10px;
            padding: 2rem;
            width: 100%;
            max-width: 400px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            transform: translateY(-20px);
            transition: all 0.3s ease;
        }

        .modal-overlay.active .modal {
            transform: translateY(0);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .modal-header h3 {
            font-size: 1.5rem;
            color: var(--secondary);
        }

        .modal-close {
            background: none;
            border: none;
            color: var(--gray);
            font-size: 1.5rem;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .modal-close:hover {
            color: var(--danger);
        }

        .modal-body .form-group {
            margin-bottom: 1.5rem;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
        }

        /* Main Container */
        .settings-container {
            padding: 120px 5% 50px;
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            gap: 2rem;
        }

        /* Settings Sidebar */
        .settings-sidebar {
            width: 250px;
            flex-shrink: 0;
            position: sticky;
            top: 120px;
            height: calc(100vh - 170px);
            overflow-y: auto;
        }

        .settings-menu {
            background-color: var(--darker);
            border-radius: 15px;
            padding: 1.5rem;
            border: 1px solid rgba(128, 142, 155, 0.1);
        }

        .settings-menu-title {
            font-size: 1.2rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--secondary);
        }

        .settings-menu-title i {
            font-size: 1.3rem;
        }

        .settings-menu-item {
            padding: 0.8rem 0;
            border-bottom: 1px solid rgba(128, 142, 155, 0.1);
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .settings-menu-item:last-child {
            border-bottom: none;
        }

        .settings-menu-item:hover {
            color: var(--secondary);
        }

        .settings-menu-item.active {
            color: var(--primary);
            font-weight: 600;
        }

        .settings-menu-item i {
            width: 20px;
            text-align: center;
        }

        /* Settings Content */
        .settings-content {
            flex: 1;
            background-color: var(--darker);
            border-radius: 15px;
            padding: 2rem;
            border: 1px solid rgba(128, 142, 155, 0.1);
            animation: fadeIn 0.5s ease-out;
        }

        .settings-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid rgba(128, 142, 155, 0.1);
        }

        .settings-header h2 {
            font-size: 1.8rem;
            background: linear-gradient(to right, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            font-weight: 800;
        }

        .settings-header-actions {
            display: flex;
            gap: 1rem;
        }

        /* Profile Section */
        .profile-section {
            display: flex;
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .avatar-upload {
            width: 150px;
            flex-shrink: 0;
            text-align: center;
            position: relative;
        }

        .avatar-preview {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid rgba(108, 92, 231, 0.3);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .avatar-preview:hover {
            transform: scale(1.05);
            border-color: var(--primary);
        }

        .avatar-upload-btn {
            margin-top: 1rem;
            position: relative;
            overflow: hidden;
            display: inline-block;
        }

        .avatar-upload-btn input {
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .profile-form {
            flex: 1;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
        }

        .form-control {
            width: 100%;
            padding: 0.8rem 1rem;
            border-radius: 8px;
            background-color: rgba(128, 142, 155, 0.1);
            border: 1px solid rgba(128, 142, 155, 0.2);
            color: var(--light);
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.2);
            outline: none;
        }

        .form-row {
            display: flex;
            gap: 1.5rem;
        }

        .form-row .form-group {
            flex: 1;
        }

        /* Security Section */
        .security-item {
            background-color: rgba(128, 142, 155, 0.05);
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 1px solid rgba(128, 142, 155, 0.1);
            transition: all 0.3s ease;
        }

        .security-item:hover {
            border-color: rgba(108, 92, 231, 0.3);
            transform: translateY(-3px);
        }

        .security-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .security-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: rgba(108, 92, 231, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary);
            font-size: 1.2rem;
        }

        .security-title {
            font-weight: 600;
            margin-bottom: 0.3rem;
        }

        .security-desc {
            font-size: 0.9rem;
            color: var(--gray);
        }

        /* Notification Section */
        .notification-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid rgba(128, 142, 155, 0.1);
        }

        .notification-item:last-child {
            border-bottom: none;
        }

        .notification-info {
            flex: 1;
        }

        .notification-title {
            font-weight: 600;
            margin-bottom: 0.3rem;
        }

        .notification-desc {
            font-size: 0.9rem;
            color: var(--gray);
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(128, 142, 155, 0.3);
            transition: .4s;
            border-radius: 24px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--primary);
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        /* Appearance Section */
        .theme-options {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .theme-option {
            border-radius: 10px;
            overflow: hidden;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .theme-option:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .theme-option.active {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.3);
        }

        .theme-preview {
            height: 80px;
            display: flex;
        }

        .theme-primary {
            flex: 1;
            background-color: var(--primary);
        }

        .theme-secondary {
            flex: 1;
            background-color: var(--secondary);
        }

        .theme-info {
            padding: 0.8rem;
            background-color: rgba(128, 142, 155, 0.1);
            text-align: center;
            font-weight: 600;
        }

        /* Privacy Section */
        .privacy-item {
            margin-bottom: 2rem;
        }

        .privacy-title {
            font-weight: 600;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .privacy-title i {
            color: var(--primary);
        }

        .privacy-options {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .privacy-option {
            flex: 1;
            min-width: 200px;
        }

        .privacy-option input {
            display: none;
        }

        .privacy-option label {
            display: block;
            padding: 1rem;
            background-color: rgba(128, 142, 155, 0.1);
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 1px solid rgba(128, 142, 155, 0.1);
        }

        .privacy-option input:checked + label {
            background-color: rgba(108, 92, 231, 0.1);
            border-color: var(--primary);
        }

        .privacy-option-title {
            font-weight: 600;
            margin-bottom: 0.3rem;
        }

        .privacy-option-desc {
            font-size: 0.8rem;
            color: var(--gray);
        }

        /* Account Section */
        .account-actions {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .account-action {
            background-color: rgba(128, 142, 155, 0.1);
            border-radius: 10px;
            padding: 1.5rem;
            text-align: center;
            transition: all 0.3s ease;
            border: 1px solid rgba(128, 142, 155, 0.1);
        }

        .account-action:hover {
            background-color: rgba(214, 48, 49, 0.1);
            border-color: var(--danger);
            transform: translateY(-3px);
        }

        .account-action.danger {
            color: var(--danger);
        }

        .account-action i {
            font-size: 2rem;
            margin-bottom: 1rem;
            display: block;
        }

        .account-action-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .account-action-desc {
            font-size: 0.9rem;
            color: var(--gray);
            margin-bottom: 1rem;
        }

        /* Floating Elements */
        .floating-element {
            position: absolute;
            border-radius: 50%;
            background: rgba(108, 92, 231, 0.1);
            filter: blur(60px);
            z-index: -1;
        }

        .floating-element-1 {
            width: 400px;
            height: 400px;
            top: -100px;
            right: -100px;
            animation: float 8s infinite ease-in-out;
        }

        .floating-element-2 {
            width: 300px;
            height: 300px;
            bottom: -50px;
            left: -50px;
            background: rgba(0, 206, 201, 0.1);
            animation: float 6s infinite ease-in-out reverse;
        }

        /* Animations */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes float {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-10px);
            }
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
            100% {
                transform: scale(1);
            }
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .settings-container {
                flex-direction: column;
            }

            .settings-sidebar {
                width: 100%;
                position: static;
                height: auto;
            }

            .profile-section {
                flex-direction: column;
                align-items: center;
                text-align: center;
            }

            .avatar-upload {
                margin-bottom: 1.5rem;
            }
        }

        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

            .form-row {
                flex-direction: column;
                gap: 0;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav>
        <div class="logo">
            <i class="fas fa-comment-dots"></i>
            <h1>ChatForAll</h1>
        </div>
        <div class="nav-links">
            <a href="/">Home</a>
            <a href="/chat">Chat</a>
            <a href="/network">Network</a>
            <a href="/settings" class="active">Settings</a>
        </div>
        <div class="auth-buttons">
            <div class="user-avatar-mini" style="width: 40px; height: 40px; border-radius: 50%; background-color: var(--primary); display: flex; align-items: center; justify-content: center; cursor: pointer;">
        
                <img src="<%= user.profileImage || '/default/default.png' %>" alt="User" style="width: 36px; height: 36px; border-radius: 50%; object-fit: cover;">
            </div>
        </div>
    </nav>

    <!-- Floating Background Elements -->
    <div class="floating-element floating-element-1"></div>
    <div class="floating-element floating-element-2"></div>

    <!-- Password Update Modal -->
    <div class="modal-overlay" id="passwordModal">
        <div class="modal">
            <div class="modal-header">
                <h3>Update Password</h3>
                <button class="modal-close" id="closePasswordModal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="passwordForm">
                    <div class="form-group">
                        <label class="form-label">Current Password</label>
                        <input type="password" class="form-control" name="currentPassword" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">New Password</label>
                        <input type="password" class="form-control" name="newPassword" required minlength="8">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" name="confirmPassword" required minlength="8">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline" id="cancelPasswordUpdate">Cancel</button>
                        <button type="submit" class="btn btn-primary">Update Password</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Main Container -->
    <div class="settings-container">
        <!-- Settings Sidebar -->
        <div class="settings-sidebar">
            <div class="settings-menu">
                <div class="settings-menu-title">
                    <i class="fas fa-cog"></i>
                    <span>Settings</span>
                </div>
                <div class="settings-menu-item active" data-section="profile">
                    <i class="fas fa-user"></i>
                    <span>Profile</span>
                </div>
                <div class="settings-menu-item" data-section="security">
                    <i class="fas fa-lock"></i>
                    <span>Security</span>
                </div>
            </div>
        </div>

        <!-- Settings Content -->
        <div class="settings-content">
            <!-- Profile Section -->
            <div class="settings-section" id="profile-section">
                <div class="settings-header">
                    <h2>Profile Settings</h2>
                    <div class="settings-header-actions">
                        <button class="btn btn-outline" id="cancelProfileChanges">Cancel</button>
                        <button class="btn btn-primary" id="saveProfileChanges">Save Changes</button>
                    </div>
                </div>

                <form id="profileForm" enctype="multipart/form-data">
                    <div class="profile-section">
                        <div class="avatar-upload">
                            <img src="<%= user.profileImage || '/public/default/default.jpg' %>" alt="User" class="avatar-preview" id="avatarPreview">
                            <div class="avatar-upload-btn">
                                <button class="btn btn-primary" style="width: 100%;">Change Avatar</button>
                                <input type="file" name="avatar" id="avatarInput" accept="image/*">
                            </div>
                        </div>

                        <div class="profile-form">
                            <div class="form-row">
                                <div class="form-group">
                                    <label class="form-label">Full Name</label>
                                    <input type="text" class="form-control" name="fullName" value="<%= user.fullName %>" required>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Username</label>
                                <input type="text" class="form-control" name="username" value="<%= user.username %>" required>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Email</label>
                                <input type="email" class="form-control" name="email" value="<%= user.email %>" required>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Bio</label>
                                <textarea class="form-control" name="bio" rows="4"><%= user.bio || '' %></textarea>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Location</label>
                                <input type="text" class="form-control" name="location" value="<%= user.location || '' %>">
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Security Section -->
            <div class="settings-section" id="security-section" style="display: none;">
                <div class="settings-header">
                    <h2>Security Settings</h2>
                </div>

                <div class="security-item">
                    <div class="security-info">
                        <div class="security-icon">
                            <i class="fas fa-key"></i>
                        </div>
                        <div>
                            <div class="security-title">Password</div>
                            <div class="security-desc">Last changed <%= user.passwordUpdatedAt ? new Date(user.passwordUpdatedAt).toLocaleDateString() : 'never' %></div>
                        </div>
                    </div>
                    <button class="btn btn-outline" id="changePasswordBtn">Change</button>
                </div>


            <!-- Account Section -->
            <div class="settings-section" id="account-section" style="display: none;">
                <div class="settings-header">
                    <h2>Account Settings</h2>
                </div>

                <div class="account-actions">
                    <div class="account-action">
                        <i class="fas fa-file-export"></i>
                        <div class="account-action-title">Export Data</div>
                        <div class="account-action-desc">Download a copy of your ChatForAll data</div>
                        <button class="btn btn-outline">Request Export</button>
                    </div>

                    <div class="account-action">
                        <i class="fas fa-language"></i>
                        <div class="account-action-title">Language</div>
                        <div class="account-action-desc">Change your preferred language</div>
                        <button class="btn btn-outline">Change</button>
                    </div>

                    <div class="account-action danger">
                        <i class="fas fa-ban"></i>
                        <div class="account-action-title">Deactivate Account</div>
                        <div class="account-action-desc">Temporarily disable your account</div>
                        <button class="btn btn-outline" style="border-color: var(--danger); color: var(--danger);">Deactivate</button>
                    </div>

                    <div class="account-action danger">
                        <i class="fas fa-trash-alt"></i>
                        <div class="account-action-title">Delete Account</div>
                        <div class="account-action-desc">Permanently delete your account</div>
                        <button class="btn btn-outline" style="border-color: var(--danger); color: var(--danger);">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Tab switching functionality
            const menuItems = document.querySelectorAll('.settings-menu-item');
            const contentSections = document.querySelectorAll('.settings-section');
            
            menuItems.forEach((item) => {
                item.addEventListener('click', function() {
                    const sectionId = this.getAttribute('data-section') + '-section';
                    
                    // Remove active class from all menu items
                    menuItems.forEach(i => i.classList.remove('active'));
                    // Add active class to clicked item
                    this.classList.add('active');
                    
                    // Hide all content sections
                    contentSections.forEach(section => section.style.display = 'none');
                    // Show corresponding content section
                    document.getElementById(sectionId).style.display = 'block';
                });
            });

            // Avatar upload preview
            const avatarInput = document.getElementById('avatarInput');
            const avatarPreview = document.getElementById('avatarPreview');
            
            avatarInput.addEventListener('change', function() {
                const file = this.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        avatarPreview.src = e.target.result;
                        avatarPreview.style.transform = 'scale(1.1)';
                        setTimeout(() => {
                            avatarPreview.style.transform = 'scale(1)';
                        }, 300);
                    }
                    reader.readAsDataURL(file);
                }
            });

        

            // Password modal functionality
            const passwordModal = document.getElementById('passwordModal');
            const changePasswordBtn = document.getElementById('changePasswordBtn');
            const closePasswordModal = document.getElementById('closePasswordModal');
            const cancelPasswordUpdate = document.getElementById('cancelPasswordUpdate');
            
            changePasswordBtn.addEventListener('click', () => {
                passwordModal.classList.add('active');
            });
            
            closePasswordModal.addEventListener('click', () => {
                passwordModal.classList.remove('active');
            });
            
            cancelPasswordUpdate.addEventListener('click', () => {
                passwordModal.classList.remove('active');
            });
            
            // Password form submission
            const passwordForm = document.getElementById('passwordForm');
            passwordForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const formData = new FormData(this);
                const data = {
                    currentPassword: formData.get('currentPassword'),
                    newPassword: formData.get('newPassword'),
                    confirmPassword: formData.get('confirmPassword')
                };
                
                if (data.newPassword !== data.confirmPassword) {
                    alert('New passwords do not match!');
                    return;
                }
                
                fetch('/settings/update-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                }).then(response => response.json())
                  .then(data => {
                      if (data.success) {
                          alert('Password updated successfully!');
                          passwordModal.classList.remove('active');
                          passwordForm.reset();
                      } else {
                          alert(data.message || 'Failed to update password');
                      }
                  });
            });

            // Profile form submission
            const profileForm = document.getElementById('profileForm');
            const saveProfileChanges = document.getElementById('saveProfileChanges');
            
            saveProfileChanges.addEventListener('click', () => {
                const formData = new FormData(profileForm);
                
                fetch('/settings/update-profile', {
                    method: 'POST',
                    body: formData
                }).then(response => response.json())
                  .then(data => {
                      if (data.success) {
                          alert('Profile updated successfully!');
                          if (data.avatarUrl) {
                              document.getElementById('avatarPreview').src = data.avatarUrl;
                              // Update nav avatar too
                              document.querySelector('.user-avatar-mini img').src = data.avatarUrl;
                          }
                      } else {
                          alert(data.message || 'Failed to update profile');
                      }
                  });
            });

        });
    </script>
</body>
</html>